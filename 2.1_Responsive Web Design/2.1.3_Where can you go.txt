[MUSIC] This section is looking at navigation. Where can I go? Navigation is really important to
websites, because if your user doesn't know where they're going to go,
they might just give up and wonder off. If you want them to stay on your webpage, you better give them some
indication of where they can be. So navigation can be hierarchical. And this is moving from the very
general to the very specific. It's a clear and simple path to all
elements and all parts of the website. It could be global, where you have
top level sections on each page. The user can easily go back to
one of those if they need to. Or it could be local, which then
occurs within the text of the webpage. Now different cultures have
different ways of navigating. But it's crucial that
you pick the right one. And before you can plan
where people can go, you need to think about
the site architecture. The way to do this is to plan
out some kind of site map. Site maps can be done with software, but again it's just pretty easy if
you draw it out for yourself. It's not a complicated thing to do. But if you start by planning where
you want your people to go, and what's available to them, you're gonna
save yourself an awful lot of time. So let's work out how to draw a site map. So, a site map is a way of
visualizing your website. It's a way of planning it out,
looking for things like navigation links. So, let's keep this really simple and
try and draw one. Your hierarchy is always gonna
always start on your home page and that's your index.html file. And then after that we know that on our gallery page we're going
to have some albums. So we know there's a link to albums. And in those albums we know
that we have a number of them. So we have four albums on our site. And the really nice about using
Post-it Notes is that you can then just rearrange your site without
having to to redraw. So, very handy, very low tech,
but handy piece of kit. So under the albums we can
go to four different places. And then under each album,
we know that we have photos in that album. And this is just a way of
structuring that hierarchy, checking that things are where you expect
them to be, so that when you go around and add in files and link to things you've
got them all going to the right place. The nice thing about it is,
because it's so low tech, it's really, really easy to change. Especially if you're using
different components for it, and you can just chop and change as you like. Now that you have an idea of what
your site structure's going to be, think about how you're
going to let people know how they can find out where
they are within that site. One of the common ways of doing is
using something called breadcrumbs, or a breadcrumb trail. And it gets its name from the fairy
tale about Hansel and Gretel, who left a trail of breadcrumbs so
they could find their way home again. So here's an example of Breadcrumbs
on the University of London website. And you can see here,
just under the picture, this is their page about Goldsmiths, which is a college
of the University of London, and just underneath the picture from Goldsmiths,
you can see a little line of blue text. And those are links. And they are the breadcrumbs, so
we can see the top level is Home. Then we've gone down a page,
down a level to Colleges and Institutes. Then from that we've selected and
gone down another level to Goldsmiths, and that's the page that we're on now. So if we were to click one of these, it would take us to the part of
the website that it's named. So for our own website we may have breadcrumbs that
look a little bit like this. We could have the Home level,
then the level of the albums. Perhaps we have album 1, and then
we're down at the level of the photos. So if we want to jump to any particular
page on the website we can do so just by clicking on the breadcrumbs. Once you've decided on structure for
your site and you've worked out how best to do your
navigation, you need to think about the practical issues about whether those
links should be absolute or relative. So you can see here the difference
between the two when you just look at the file names. So if you had a relative link, you wanted
to link to something within your site, you might just type index.html
as your link to the home page. Or if you had an image, your link to
the image might be images/myimage.html. Or if you wanted to link to a specific
album, it might be album1.html. Now this assumes that you have got,
where you are, you have access to all
the files in that directory. So you're linking just to another
file in the same directory. If you were to make it an absolute link, then you would give the full
domain name for your link. So in this case it would
be the www.mywebsitename, whatever that might be, .com/index.html. Again if you had one with images you might
do mywebsitename.com/images/image.html. Or for the album,
mywebsitename.com/album1.html. So you can see you're specifying
an actual URL, an actual web path, even if the file is
within your own website. Now there are debates over whether
you should use relative or whether you should use absolute paths and
absolute links for your website. The jury's out. I kind of lean towards doing absolute ones because it's easier in terms
of search engine indexing. And also it's quite easy
to change things and structure of your site
if you're gonna do that. Without breaking link pass, so you can move things around
in different directories. But it's up to you, but do think about the
impact it will have if you change things around when you've done
relative versus absolute links. [MUSIC].